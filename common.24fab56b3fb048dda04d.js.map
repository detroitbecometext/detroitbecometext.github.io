{"version":3,"mappings":"+LAWO,IAAeA,EAAtB,MAAM,gBACMC,IAURC,YACuBC,EACFC,EACAC,EACjBC,GAEAC,MAAMD,GALaE,aACFA,cACAA,mBAKjBA,KAAKC,YAAc,IAAIC,IAAmB,MAC1CF,KAAKG,aAAeH,KAAKC,YAAYG,eAGzCC,WACIL,KAAKM,MAAMC,SAASC,UAAWb,gBAC3B,MAAMc,GAAkBd,EAAOe,IAAI,MACnC,IAAIC,EAAOX,KAAKY,YAAYF,IAAID,QAEnB,IAATE,GAKJX,KAAKa,eAAsD,QAArChB,EAAiC,QAAjCD,OAAKgB,YAAYF,IAAIC,EAAKG,GAAK,UAAE,eAAEA,UAAE,QAAI,KAC/Dd,KAAKe,WAAkD,QAArCC,EAAiC,QAAjClB,OAAKc,YAAYF,IAAIC,EAAKG,GAAK,UAAE,eAAEA,UAAE,QAAI,KAE3Dd,KAAKC,YAAYgB,KAAKN,IAPlBX,KAAKkB,OAAOC,SAAS,CAAC,gBAYlCC,oBAAoBzB,GAChB,IAAIC,EAAuB,KAC3B,GAAiB,cAAbD,EAAM0B,IACNzB,EAAQI,KAAKC,YAAYqB,MAAMR,GAAK,UAChB,aAAbnB,EAAM0B,IAGb,OAFAzB,EAAQI,KAAKC,YAAYqB,MAAMR,GAAK,EAKxCnB,EAAM4B,2BAEN,IAAI1B,OAA6C,IAAhCG,KAAKY,YAAYF,IAAId,GAExB,OAAVA,GAAkBC,GAClBG,KAAKkB,OAAOC,SAAS,CAACnB,KAAKwB,QAAS5B,kDAxD1B6B,GAA8BC,yEAA9BD,EAA8BE,8FAA9B/B,2BAA2B,qFAA3B6B,GAAtB","names":["h","m","constructor","e","t","n","r","super","this","currentItem","c","currentItem$","asObservable","ngOnInit","route","paramMap","subscribe","I","get","o","dataService","previousItemId","id","nextItemId","l","next","router","navigate","itemNavigationEvent","key","value","stopImmediatePropagation","baseUrl","s","a","selectors"],"sources":["./src/app/shared/components/base-data-item-navigator/base-data-item-navigator.component.ts"],"sourcesContent":["import { OnInit, Component, HostListener } from '@angular/core';\r\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\r\nimport { DataItem } from '@app/core/models/data-item';\r\nimport { BaseDataService } from '@app/core/services/base-data-service';\r\nimport { TranslocoService } from '@ngneat/transloco';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { BaseTranslationComponent } from '../base-translation/base-translation.component';\r\n\r\n@Component({\r\n    template: '',\r\n})\r\nexport abstract class BaseDataItemNavigatorComponent<T extends DataItem>\r\n    extends BaseTranslationComponent\r\n    implements OnInit\r\n{\r\n    private currentItem: BehaviorSubject<T>;\r\n    public currentItem$: Observable<T>;\r\n\r\n    public previousItemId: number;\r\n    public nextItemId: number;\r\n    protected baseUrl: string;\r\n\r\n    constructor(\r\n        protected readonly route: ActivatedRoute,\r\n        private readonly router: Router,\r\n        private readonly dataService: BaseDataService<T>,\r\n        translocoService: TranslocoService\r\n    ) {\r\n        super(translocoService);\r\n\r\n        this.currentItem = new BehaviorSubject<T>(null);\r\n        this.currentItem$ = this.currentItem.asObservable();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.route.paramMap.subscribe((params: ParamMap) => {\r\n            const itemId: number = +params.get('id');\r\n            let item = this.dataService.get(itemId);\r\n\r\n            if (item === undefined) {\r\n                this.router.navigate(['not-found']);\r\n                return;\r\n            }\r\n\r\n            this.previousItemId = this.dataService.get(item.id - 1)?.id ?? null;\r\n            this.nextItemId = this.dataService.get(item.id + 1)?.id ?? null;\r\n\r\n            this.currentItem.next(item);\r\n        });\r\n    }\r\n\r\n    @HostListener('window:keyup', ['$event'])\r\n    itemNavigationEvent(event: KeyboardEvent) {\r\n        let newId: number | null = null;\r\n        if (event.key == 'ArrowRight') {\r\n            newId = this.currentItem.value.id + 1;\r\n        } else if (event.key == 'ArrowLeft') {\r\n            newId = this.currentItem.value.id - 1;\r\n        } else {\r\n            return;\r\n        }\r\n\r\n        event.stopImmediatePropagation();\r\n\r\n        let itemExists = this.dataService.get(newId) !== undefined;\r\n\r\n        if (newId !== null && itemExists) {\r\n            this.router.navigate([this.baseUrl, newId]);\r\n        }\r\n    }\r\n}\r\n"],"sourceRoot":"webpack:///","file":"common.24fab56b3fb048dda04d.js"}