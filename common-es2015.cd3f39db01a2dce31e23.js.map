{"version":3,"sources":["webpack:///src/app/features/layout/sidenav/sidenav.component.html","webpack:///src/app/features/layout/sidenav/sidenav.component.ts","webpack:///src/app/features/layout/info-dialog/info-dialog.component.html","webpack:///src/app/features/layout/info-dialog/info-dialog.component.ts","webpack:///src/app/features/layout/header/header.component.ts","webpack:///src/app/features/layout/header/header.component.html","webpack:///src/app/features/layout/base-layout/base-layout.component.ts","webpack:///src/app/features/layout/base-layout/base-layout.component.html"],"names":["sidenav","SidenavComponent","dataService","this","links","getChapters","map","c","title","id","InfoDialogComponent","Status","chapters","HeaderComponent","dialog","open","height","width","maxHeight","autoFocus","openDialog","BaseLayoutComponent"],"mappings":"iTAGQ,cAII,8CAASA,QAAA,UAET,QACJ,O,4BALI,kCAIA,+B,qCCOL,Y,MAAMC,EAIT,YAAoBC,GAAA,KAAAA,cAEpB,WACIC,KAAKC,MAAQD,KAAKD,YACbG,cACAC,IAAKC,GAAM,IAAI,IAAKA,EAAEC,MAAOD,EAAEE,M,6CAT/BR,GAAgB,Y,uBAAhBA,EAAgB,yVDhB7B,gBACI,aAAI,uBAAY,OAChB,uBACI,oBAQJ,OAEA,sBAEA,aAAI,iBAAM,OACV,uBACI,cAA2C,+BAAS,EAAAD,QAAA,UAChD,mBACJ,OACA,eAII,+BAAS,EAAAA,QAAA,UAET,uBACJ,OACJ,OACJ,Q,MAvB6B,gCAWJ,uC,iNCDlB,G,sFC0CS,iBACI,qBAAiC,iBACrC,Q,sBACA,iBAII,qBAAiC,0BACrC,Q,sBACA,iBAII,qBAAsC,wBAC1C,Q,yBAnBJ,QACI,iBACI,QACJ,OAEA,uBAGA,uBAMA,uBAMJ,Q,kCAlBQ,4CAGE,8CAID,oDAMA,qDC5Dd,Y,MAAMU,EAKT,YAAoBR,GAAA,KAAAA,cAFpB,KAAAS,OAAS,IAIT,WACIR,KAAKS,SAAWT,KAAKD,YAAYG,e,6CAR5BK,GAAmB,Y,uBAAnBA,EAAmB,+yBDRhC,gBACI,eAAuC,gBAAK,OAC5C,+BACI,YAAG,iBAAmB,gBAAK,OAAQ,gCAAoB,OACvD,YACI,iBAAQ,yCAA6B,OAAU,cAAM,2DAEzD,OACA,iBACI,kBACK,6DAAiD,OAEtD,iBACI,8DACJ,OACJ,OACA,aAAG,kBAAmB,iBAAK,OAAQ,2BAAc,OACjD,iBACI,cAAI,4BAAgB,OACpB,iBAAoB,sDAA0C,OAClE,OAEA,iBACI,gBACI,eACA,sBAKA,eACJ,OACA,aACI,4EACJ,OACA,gBACI,eAAE,sBAAmD,eACzD,OACA,aAAG,+CAAmC,OACtC,gBACI,eAAE,sBAA2D,eACjE,OACA,aAAG,mEAAuD,OAC1D,gBACI,eAAE,sBAAgD,eACtD,OACA,aAAG,gEAAoD,OAC3D,OAEA,uBAEA,cAAI,oBAAQ,OACZ,iBACI,iCAqBJ,OACJ,OACA,iCACI,cACA,qBAAoC,iBAAK,OAC7C,OACJ,Q,MA3B8C,sC,giBC7CvC,G,qECQA,Y,MAAMG,EAGT,YAAoBC,GAAA,KAAAA,SAEpB,YAEA,aACIX,KAAKW,OAAOC,KAAK,EAAqB,CAClCC,OAAQ,QACRC,MAAO,QACPC,UAAW,OACXC,WAAW,K,6CAZVN,GAAe,Y,uBAAfA,EAAe,uRChB5B,iBACI,gBACI,oBAAqB,+BAAS,EAAAb,QAAA,WAAkB,OAChD,oBACA,oBAAyB,+BAAS,EAAAoB,eAAc,OAChD,oBACJ,OACJ,Q,MAJ6B,qCAEI,uC,udDW1B,G,gBEVA,Y,MAAMC,EAEX,eAEA,a,6CAJWA,I,uBAAAA,EAAmB,gU,GAAA,MCNhC,kCAEI,0BACI,wBACJ,OAEA,gCACI,uBACA,gBAMI,0BACJ,OACA,uBACJ,OACJ,Q,qBAfqB,0BAIiB,4B,kVDD/B","file":"x","sourcesContent":["<div class=\"container\">\n    <h1>Chapter list</h1>\n    <mat-nav-list>\n        <a\n            mat-list-item\n            [routerLink]=\"['/chapters', link.id]\"\n            *ngFor=\"let link of links\"\n            (click)=\"sidenav.close()\"\n        >\n            {{ link.label }}\n        </a>\n    </mat-nav-list>\n\n    <mat-divider></mat-divider>\n\n    <h1>Extras</h1>\n    <mat-nav-list>\n        <a mat-list-item [routerLink]=\"['/chloe']\" (click)=\"sidenav.close()\">\n            Chloe\n        </a>\n        <a\n            mat-list-item\n            href=\"https://detroit-become-human.fandom.com/wiki/Magazine\"\n            target=\"_blank\"\n            (click)=\"sidenav.close()\"\n        >\n            Magazines\n        </a>\n    </mat-nav-list>\n</div>\n","import {\n    Component,\n    OnInit,\n    ChangeDetectionStrategy,\n    Input,\n} from '@angular/core';\nimport { MatSidenav } from '@angular/material/sidenav';\nimport { Link } from '@app/core/models';\nimport { DataService } from '@app/core/services';\n\n@Component({\n    selector: 'app-sidenav',\n    templateUrl: './sidenav.component.html',\n    styleUrls: ['./sidenav.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SidenavComponent implements OnInit {\n    @Input() sidenav: MatSidenav;\n    public links: Link[];\n\n    constructor(private dataService: DataService) {}\n\n    ngOnInit(): void {\n        this.links = this.dataService\n            .getChapters()\n            .map((c) => new Link(c.title, c.id));\n    }\n}\n","<div fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\n    <h1 mat-dialog-title fxFlex=\"1 0 auto\">About</h1>\n    <mat-dialog-content fxFlex=\"0 0 auto\">\n        <p><span class=\"name\">Names</span> are written in bold.</p>\n        <p>\n            <strong>This is an action or an event</strong> <br />The associated\n            dialogue being available below.\n        </p>\n        <div class=\"condition\">\n            <span class=\"name\"\n                >Conditions that affect dialogues are also in bold</span\n            >\n            <div class=\"condition-text\">\n                And the text that goes with it is written below.\n            </div>\n        </div>\n        <p><span class=\"note\">Notes</span> are in italic.</p>\n        <div class=\"choices\">\n            <em>DIALOGUE CHOICES</em>\n            <div class=\"choice\">have their associated dialogue just below.</div>\n        </div>\n\n        <div gdColumns=\"auto 1fr\" gdRows=\"auto\">\n            <p class=\"presentation-icon\">\n                [\n                <fa-icon\n                    icon=\"lock-open\"\n                    flip=\"horizontal\"\n                    class=\"important\"\n                ></fa-icon>\n                ]\n            </p>\n            <p>\n                means that the option has to be unlocked by a previous action.\n            </p>\n            <p class=\"presentation-icon\">\n                [ <fa-icon icon=\"skull\" class=\"important\"></fa-icon> ]\n            </p>\n            <p>indicates the death of a character.</p>\n            <p class=\"presentation-icon\">\n                [ <fa-icon icon=\"hourglass-end\" class=\"important\"></fa-icon> ]\n            </p>\n            <p>indicates actions happening if you loose too much time.</p>\n            <p class=\"presentation-icon\">\n                [ <fa-icon icon=\"tv\" class=\"important\"></fa-icon> ]\n            </p>\n            <p>indicates dialogues that can be heard on television.</p>\n        </div>\n\n        <mat-divider></mat-divider>\n\n        <h2>Progress</h2>\n        <div gdColumns=\"auto 1fr\" gdRows=\"auto\">\n            <ng-container *ngFor=\"let chapter of chapters\">\n                <div class=\"chapter-progress-title\">\n                    {{ chapter.number }}. {{ chapter.title }}\n                </div>\n\n                <div *ngIf=\"chapter.status === Status.Done\" class=\"done\">\n                    <fa-icon icon=\"check\"></fa-icon> Done\n                </div>\n                <div\n                    *ngIf=\"chapter.status === Status.NotStarted\"\n                    class=\"not-started\"\n                >\n                    <fa-icon icon=\"times\"></fa-icon> Not available\n                </div>\n                <div\n                    *ngIf=\"chapter.status === Status.InProgress\"\n                    class=\"in-progress\"\n                >\n                    <fa-icon icon=\"ellipsis-h\"></fa-icon> In progress\n                </div>\n            </ng-container>\n        </div>\n    </mat-dialog-content>\n    <mat-dialog-actions fxFlex=\"1 0 auto\">\n        <br />\n        <button mat-button mat-dialog-close>Close</button>\n    </mat-dialog-actions>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Chapter, Status } from '@app/core/models';\nimport { DataService } from '@app/core/services';\n\n@Component({\n    templateUrl: './info-dialog.component.html',\n    styleUrls: ['./info-dialog.component.scss'],\n})\nexport class InfoDialogComponent implements OnInit {\n    public chapters: Chapter[];\n\n    Status = Status;\n\n    constructor(private dataService: DataService) {}\n\n    ngOnInit(): void {\n        this.chapters = this.dataService.getChapters();\n    }\n}\n","import {\n    Component,\n    OnInit,\n    ChangeDetectionStrategy,\n    Input,\n} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSidenav } from '@angular/material/sidenav';\nimport { InfoDialogComponent } from '../info-dialog/info-dialog.component';\n\n@Component({\n    selector: 'app-header',\n    templateUrl: './header.component.html',\n    styleUrls: ['./header.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HeaderComponent implements OnInit {\n    @Input() sidenav: MatSidenav;\n\n    constructor(private dialog: MatDialog) {}\n\n    ngOnInit(): void {}\n\n    openDialog() {\n        this.dialog.open(InfoDialogComponent, {\n            height: '500px',\n            width: '600px',\n            maxHeight: '90vh',\n            autoFocus: false,\n        });\n    }\n}\n","<header>\n    <nav fxLayout=\"row\" fxLayoutAlign=\"start center\">\n        <fa-icon icon=\"bars\" (click)=\"sidenav.toggle()\"></fa-icon>\n        <fa-icon icon=\"home\" [routerLink]=\"['/home']\"></fa-icon>\n        <fa-icon icon=\"question\" (click)=\"openDialog()\"></fa-icon>\n        <fa-icon icon=\"envelope\" [routerLink]=\"['/contact']\"></fa-icon>\n    </nav>\n</header>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  templateUrl: './base-layout.component.html',\n  styleUrls: ['./base-layout.component.scss']\n})\nexport class BaseLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-sidenav-container class=\"container\">\n    <!-- Sidenav -->\n    <mat-sidenav #sidenav mode=\"side\">\n        <app-sidenav [sidenav]=\"sidenav\"></app-sidenav>\n    </mat-sidenav>\n    <!-- Page content -->\n    <mat-sidenav-content fxLayout=\"column\">\n        <app-header fxFlex=\"0 1 auto\" [sidenav]=\"sidenav\"></app-header>\n        <div\n            fxFlex=\"1 1 auto\"\n            fxLayout=\"column\"\n            fxLayoutAlign=\"start stretch\"\n            class=\"content\"\n        >\n            <router-outlet fxFlex=\"0 0 0\"></router-outlet>\n        </div>\n        <app-footer fxFlex=\"0 1 auto\"></app-footer>\n    </mat-sidenav-content>\n</mat-sidenav-container>\n"]}