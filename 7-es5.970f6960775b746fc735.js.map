{"version":3,"sources":["webpack:///src/app/features/chapters/shared/directives/chapter-content.directive.ts","webpack:///node_modules/rxjs/_esm2015/internal/operators/delay.js","webpack:///src/app/features/chapters/shared/components/chapter-nav/chapter-nav.component.html","webpack:///src/app/features/chapters/shared/components/chapter-nav/chapter-nav.component.ts","webpack:///src/app/features/chapters/chapter/chapter.component.html","webpack:///src/app/features/chapters/chapter/chapter.component.ts","webpack:///src/app/features/chapters/chapters-routing.module.ts","webpack:///src/app/features/chapters/chapters.module.ts","webpack:///node_modules/rxjs/_esm2015/internal/util/isDate.js"],"names":["ChapterContentDirective","DelayOperator","delay","scheduler","this","subscriber","source","subscribe","destination","super","queue","active","errored","add","schedule","dispatch","notification","message","DelayMessage","now","push","_schedule","value","scheduleNotification","Notification","createNext","err","error","unsubscribe","createComplete","state","length","time","shift","observe","Math","max","Subscriber","viewContainerRef","ChapterNavComponent","dataService","chapter","chapterNav","getPreviousChapterId","id","getNextChapterId","character","ChapterComponent","ChaptersRoutingModule","ChaptersModule","route","router","componentFactoryResolver","viewPortScroller","previousChapterId$","BehaviorSubject","nextChapterId$","previousCharacterChapterId$","nextCharacterChapterId$","isLoading$","paramMap","pipe","a","delayFor","Date","isNaN","abs","lift","params","next","chapterId","get","LoadChapter","getChapter","componentFactory","resolveComponentFactory","component","contentHost","clear","createComponent","scrollToPosition","navigate","routes","path","redirectTo","children","forChild"],"mappings":"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","file":"x","sourcesContent":["import { Directive, ViewContainerRef } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[appChapterContent]',\r\n})\r\nexport class ChapterContentDirective {\r\n    constructor(public viewContainerRef: ViewContainerRef) {}\r\n}\r\n","import { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nexport function delay(delay, scheduler = async) {\n    const absoluteDelay = isDate(delay);\n    const delayFor = absoluteDelay ? (+delay - scheduler.now()) : Math.abs(delay);\n    return (source) => source.lift(new DelayOperator(delayFor, scheduler));\n}\nclass DelayOperator {\n    constructor(delay, scheduler) {\n        this.delay = delay;\n        this.scheduler = scheduler;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));\n    }\n}\nclass DelaySubscriber extends Subscriber {\n    constructor(destination, delay, scheduler) {\n        super(destination);\n        this.delay = delay;\n        this.scheduler = scheduler;\n        this.queue = [];\n        this.active = false;\n        this.errored = false;\n    }\n    static dispatch(state) {\n        const source = state.source;\n        const queue = source.queue;\n        const scheduler = state.scheduler;\n        const destination = state.destination;\n        while (queue.length > 0 && (queue[0].time - scheduler.now()) <= 0) {\n            queue.shift().notification.observe(destination);\n        }\n        if (queue.length > 0) {\n            const delay = Math.max(0, queue[0].time - scheduler.now());\n            this.schedule(state, delay);\n        }\n        else {\n            this.unsubscribe();\n            source.active = false;\n        }\n    }\n    _schedule(scheduler) {\n        this.active = true;\n        const destination = this.destination;\n        destination.add(scheduler.schedule(DelaySubscriber.dispatch, this.delay, {\n            source: this, destination: this.destination, scheduler: scheduler\n        }));\n    }\n    scheduleNotification(notification) {\n        if (this.errored === true) {\n            return;\n        }\n        const scheduler = this.scheduler;\n        const message = new DelayMessage(scheduler.now() + this.delay, notification);\n        this.queue.push(message);\n        if (this.active === false) {\n            this._schedule(scheduler);\n        }\n    }\n    _next(value) {\n        this.scheduleNotification(Notification.createNext(value));\n    }\n    _error(err) {\n        this.errored = true;\n        this.queue = [];\n        this.destination.error(err);\n        this.unsubscribe();\n    }\n    _complete() {\n        this.scheduleNotification(Notification.createComplete());\n        this.unsubscribe();\n    }\n}\nclass DelayMessage {\n    constructor(time, notification) {\n        this.time = time;\n        this.notification = notification;\n    }\n}\n//# sourceMappingURL=delay.js.map","<div class=\"container\" *ngIf=\"chapterNav\">\r\n    <div>\r\n        <a\r\n            *ngIf=\"chapterNav.previousChapterId != null\"\r\n            class=\"prev\"\r\n            [routerLink]=\"['/chapters', chapterNav.previousChapterId]\"\r\n        >\r\n            <fa-icon icon=\"angle-left\"></fa-icon> Previous chapter</a\r\n        >\r\n    </div>\r\n    <div class=\"next\">\r\n        <a\r\n            *ngIf=\"chapterNav.nextChapterId != null\"\r\n            class=\"next\"\r\n            [routerLink]=\"['/chapters', chapterNav.nextChapterId]\"\r\n            >Next chapter <fa-icon icon=\"angle-right\"></fa-icon\r\n        ></a>\r\n    </div>\r\n\r\n    <div>\r\n        <a\r\n            *ngIf=\"chapterNav.previousCharacterChapterId != null\"\r\n            class=\"prev\"\r\n            [routerLink]=\"['/chapters', chapterNav.previousCharacterChapterId]\"\r\n        >\r\n            <fa-icon icon=\"angle-left\"></fa-icon> Previous\r\n            {{ chapter.character }} chapter</a\r\n        >\r\n    </div>\r\n    <div class=\"next\">\r\n        <a\r\n            *ngIf=\"chapterNav.nextCharacterChapterId != null\"\r\n            class=\"next\"\r\n            [routerLink]=\"['/chapters', chapterNav.nextCharacterChapterId]\"\r\n            >Next {{ chapter.character }} chapter\r\n            <fa-icon icon=\"angle-right\"></fa-icon\r\n        ></a>\r\n    </div>\r\n</div>\r\n","import {\r\n    Component,\r\n    OnInit,\r\n    ChangeDetectionStrategy,\r\n    Input,\r\n} from '@angular/core';\r\nimport { Chapter, ChapterNav } from '@app/core/models';\r\nimport { DataService } from '@app/core/services';\r\n\r\n@Component({\r\n    selector: 'app-chapter-nav',\r\n    templateUrl: './chapter-nav.component.html',\r\n    styleUrls: ['./chapter-nav.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ChapterNavComponent implements OnInit {\r\n    public chapterNav: ChapterNav;\r\n    public chapter: Chapter;\r\n\r\n    @Input('chapter') set setChapter(value: Chapter) {\r\n        if (value) {\r\n            this.chapter = value;\r\n            this.chapterNav = new ChapterNav(\r\n                this.dataService.getPreviousChapterId(value.id),\r\n                this.dataService.getNextChapterId(value.id),\r\n                this.dataService.getPreviousChapterId(\r\n                    value.id,\r\n                    value.character\r\n                ),\r\n                this.dataService.getNextChapterId(value.id, value.character)\r\n            );\r\n        }\r\n    }\r\n    constructor(private readonly dataService: DataService) {}\r\n\r\n    ngOnInit(): void {}\r\n}\r\n","<main class=\"container\" fxLayout=\"column\" fxLayoutAlign=\"start\">\r\n    <ng-container *ngIf=\"!(isLoading$ | async)\">\r\n        <header fxFlexAlign=\"stretch\">\r\n            <h1>Chapter {{ chapter.number }} - {{ chapter.title }}</h1>\r\n        </header>\r\n    </ng-container>\r\n\r\n    <mat-card fxFlexAlign=\"center\">\r\n        <mat-card-content>\r\n            <!-- Top nav -->\r\n            <ng-container *ngIf=\"!(isLoading$ | async); else loading\">\r\n                <app-chapter-nav [chapter]=\"chapter\"></app-chapter-nav>\r\n\r\n                <mat-divider></mat-divider>\r\n            </ng-container>\r\n\r\n            <!-- Chapter content -->\r\n            <div class=\"chapter-content\">\r\n                <ng-template appChapterContent></ng-template>\r\n            </div>\r\n\r\n            <!-- Bottom nav -->\r\n            <ng-container *ngIf=\"!(isLoading$ | async)\">\r\n                <mat-divider></mat-divider>\r\n                <app-chapter-nav [chapter]=\"chapter\"></app-chapter-nav>\r\n            </ng-container>\r\n\r\n            <!-- Loading -->\r\n            <ng-template #loading>\r\n                <div\r\n                    fxLayout=\"row\"\r\n                    fxLayoutAlign=\"center center\"\r\n                    class=\"spinner\"\r\n                >\r\n                    <mat-spinner></mat-spinner>\r\n                </div>\r\n            </ng-template>\r\n        </mat-card-content>\r\n    </mat-card>\r\n</main>\r\n","import { ViewportScroller } from '@angular/common';\r\nimport {\r\n    AfterViewInit,\r\n    Component,\r\n    ComponentFactoryResolver,\r\n    OnInit,\r\n    ViewChild,\r\n} from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Chapter } from '@app/core/models';\r\nimport { DataService } from '@app/core/services';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { delay } from 'rxjs/operators';\r\nimport { ChapterContentDirective } from '../shared/directives/chapter-content.directive';\r\nimport { IChapterContent } from '../shared/interfaces/chapter-component.interface';\r\n\r\n@Component({\r\n    templateUrl: './chapter.component.html',\r\n    styleUrls: ['./chapter.component.scss'],\r\n})\r\nexport class ChapterComponent implements OnInit, AfterViewInit {\r\n    public chapter: Chapter;\r\n    public chapterContent: string;\r\n    public isLoading$: BehaviorSubject<boolean>;\r\n\r\n    public previousChapterId$: BehaviorSubject<\r\n        number | null\r\n    > = new BehaviorSubject(null);\r\n    public nextChapterId$: BehaviorSubject<number | null> = new BehaviorSubject(\r\n        null\r\n    );\r\n    public previousCharacterChapterId$: BehaviorSubject<\r\n        number | null\r\n    > = new BehaviorSubject(null);\r\n    public nextCharacterChapterId$: BehaviorSubject<\r\n        number | null\r\n    > = new BehaviorSubject(null);\r\n\r\n    @ViewChild(ChapterContentDirective)\r\n    contentHost: ChapterContentDirective;\r\n\r\n    constructor(\r\n        private readonly dataService: DataService,\r\n        private readonly route: ActivatedRoute,\r\n        private readonly router: Router,\r\n        private readonly componentFactoryResolver: ComponentFactoryResolver,\r\n        private readonly viewPortScroller: ViewportScroller\r\n    ) {}\r\n\r\n    ngOnInit(): void {\r\n        this.isLoading$ = new BehaviorSubject<boolean>(true);\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        this.route.paramMap.pipe(delay(0)).subscribe((params) => {\r\n            this.isLoading$.next(true);\r\n            const chapterId: number = +params.get('id');\r\n            this.LoadChapter(chapterId);\r\n        });\r\n    }\r\n\r\n    private LoadChapter(chapterId: number): void {\r\n        this.chapter = this.dataService.getChapter(chapterId);\r\n        if (this.chapter === undefined) {\r\n            // Chapter doesn't exist, redirecting to 404\r\n            this.router.navigate(['not-found']);\r\n            return;\r\n        }\r\n\r\n        // Load the component\r\n        const componentFactory = this.componentFactoryResolver.resolveComponentFactory(\r\n            this.chapter.component\r\n        );\r\n\r\n        const viewContainerRef = this.contentHost.viewContainerRef;\r\n        viewContainerRef.clear();\r\n\r\n        const componentRef = viewContainerRef.createComponent<IChapterContent>(\r\n            componentFactory\r\n        );\r\n\r\n        this.isLoading$.next(false);\r\n        this.viewPortScroller.scrollToPosition([0, 0]);\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { BaseLayoutComponent } from '../layout/base-layout/base-layout.component';\r\n\r\nimport { ChapterComponent } from './chapter/chapter.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        redirectTo: '0',\r\n        component: BaseLayoutComponent,\r\n        children: [{ path: '', component: ChapterComponent }],\r\n    },\r\n    {\r\n        path: ':id',\r\n        component: BaseLayoutComponent,\r\n        children: [{ path: '', component: ChapterComponent }],\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule],\r\n})\r\nexport class ChaptersRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { ChaptersRoutingModule } from './chapters-routing.module';\r\nimport { ChapterComponent } from './chapter/chapter.component';\r\nimport { SharedModule } from '@app/shared/shared.module';\r\nimport { ChapterContentDirective } from './shared/directives/chapter-content.directive';\r\nimport { ChapterNavComponent } from './shared/components/chapter-nav/chapter-nav.component';\r\nimport { RelationDirective } from './shared/directives/relation.directive';\r\nimport { TheHostageChapterContentComponent } from './chapter-contents/1-the-hostage-chapter-content/the-hostage-chapter-content.component';\r\nimport { OpeningChapterContentComponent } from './chapter-contents/2-opening-chapter-content/opening-chapter-content.component';\r\nimport { ShadesColorChapterContentComponent } from './chapter-contents/3-shades-color-chapter-content/shades-color-chapter-content.component';\r\nimport { NewHomeChapterContentComponent } from './chapter-contents/4-new-home-chapter-content/new-home-chapter-content.component';\r\nimport { PainterChapterContentComponent } from './chapter-contents/5-painter-chapter-content/painter-chapter-content.component';\r\nimport { PartnersChapterContentComponent } from './chapter-contents/6-partners-chapter-content/partners-chapter-content.component';\r\nimport { StormyNightChapterContentComponent } from './chapter-contents/7-stormy-night-chapter-content/stormy-night-chapter-content.component';\r\nimport { BrokenChapterContentComponent } from './chapter-contents/8-broken-chapter-content/broken-chapter-content.component';\r\nimport { TheInterrogationChapterContentComponent } from './chapter-contents/9-the-interrogation-chapter-content/the-interrogation-chapter-content.component';\r\nimport { FugitivesChapterContentComponent } from './chapter-contents/10-fugitives-chapter-content/fugitives-chapter-content.component';\r\nimport { FromTheDeadChapterContentComponent } from './chapter-contents/11-from-the-dead-chapter-content/from-the-dead-chapter-content.component';\r\nimport { WaitingForHankChapterContentComponent } from './chapter-contents/12-waiting-for-hank-chapter-content/waiting-for-hank-chapter-content.component';\r\nimport { OnTheRunChapterContentComponent } from './chapter-contents/13-on-the-run-chapter-content/on-the-run-chapter-content.component';\r\nimport { JerichoChapterContentComponent } from './chapter-contents/14-jericho-chapter-content/jericho-chapter-content.component';\r\nimport { TheNestChapterContentComponent } from './chapter-contents/15-the-nest-chapter-content/the-nest-chapter-content.component';\r\nimport { TimeToDecideChapterContentComponent } from './chapter-contents/16-time-to-decide-chapter-content/time-to-decide-chapter-content.component';\r\nimport { ZlatkoChapterContentComponent } from './chapter-contents/17-zlatko-chapter-content/zlatko-chapter-content.component';\r\nimport { RussianRouletteChapterContentComponent } from './chapter-contents/18-russian-roulette-chapter-content/russian-roulette-chapter-content.component';\r\nimport { SparePartsChapterContentComponent } from './chapter-contents/19-spare-parts-chapter-content/spare-parts-chapter-content.component';\r\nimport { EdenClubChapterContentComponent } from './chapter-contents/20-eden-club-chapter-content/eden-club-chapter-content.component';\r\nimport { PiratesCoveChapterContentComponent } from './chapter-contents/21-pirates-cove-chapter-content/pirates-cove-chapter-content.component';\r\nimport { TheBridgeChapterContentComponent } from './chapter-contents/22-the-bridge-chapter-content/the-bridge-chapter-content.component';\r\nimport { StratfordTowerChapterContentComponent } from './chapter-contents/23-stratford-tower-chapter-content/stratford-tower-chapter-content.component';\r\nimport { PublicEnemyChapterContentComponent } from './chapter-contents/24-public-enemy-chapter-content/public-enemy-chapter-content.component';\r\nimport { MidnightTrainChapterContentComponent } from './chapter-contents/25-midnight-train-chapter-content/midnight-train-chapter-content.component';\r\nimport { CapitolParkChapterContentComponent } from './chapter-contents/26-capitol-park-chapter-content/capitol-park-chapter-content.component';\r\nimport { MeetKamskiChapterContentComponent } from './chapter-contents/27-meet-kamski-chapter-content/meet-kamski-chapter-content.component';\r\nimport { FreedomMarchChapterContentComponent } from './chapter-contents/28-freedom-march-chapter-content/freedom-march-chapter-content.component';\r\nimport { LastChanceConnorChapterContentComponent } from './chapter-contents/29-last-chance-connor-chapter-content/last-chance-connor-chapter-content.component';\r\nimport { CrossroadsKaraChapterContentComponent } from './chapter-contents/30.1-crossroads-kara-chapter-content/crossroads-kara-chapter-content.component';\r\nimport { CrossroadsConnorChapterContentComponent } from './chapter-contents/30.2-crossroads-connor-chapter-content/crossroads-connor-chapter-content.component';\r\nimport { CrossroadsMarkusChapterContentComponent } from './chapter-contents/30.3-crossroads-markus-chapter-content/crossroads-markus-chapter-content.component';\r\nimport { NightSoulMarkusChapterContentComponent } from './chapter-contents/31.1-night-soul-markus-chapter-content/night-soul-markus-chapter-content.component';\r\nimport { NightSoulConnorChapterContentComponent } from './chapter-contents/31.2-night-soul-connor-chapter-content/night-soul-connor-chapter-content.component';\r\nimport { KaraLeavingDetroitChapterContentComponent } from './chapter-contents/32.1-kara-leaving-detroit-chapter-content/kara-leaving-detroit-chapter-content.component';\r\nimport { KaraCapturedChapterContentComponent } from './chapter-contents/32.2-kara-captured-chapter-content/kara-captured-chapter-content.component';\r\nimport { ConnorsLastMissionChapterContentComponent } from './chapter-contents/32.3-connors-last-mission-chapter-content/connors-last-mission-chapter-content.component';\r\nimport { ConnorCyberlifeTowerChapterContentComponent } from './chapter-contents/32.4-connor-cyberlife-tower-chapter-content/connor-cyberlife-tower-chapter-content.component';\r\nimport { MarkusDemonstrationChapterContentComponent } from './chapter-contents/32.5-markus-demonstration-chapter-content/markus-demonstration-chapter-content.component';\r\nimport { MarkusRevolutionChapterContentComponent } from './chapter-contents/32.6-markus-revolution-chapter-content/markus-revolution-chapter-content.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        ChapterComponent,\r\n        ChapterContentDirective,\r\n        ChapterNavComponent,\r\n        RelationDirective,\r\n        TheHostageChapterContentComponent,\r\n        OpeningChapterContentComponent,\r\n        ShadesColorChapterContentComponent,\r\n        NewHomeChapterContentComponent,\r\n        PainterChapterContentComponent,\r\n        PartnersChapterContentComponent,\r\n        StormyNightChapterContentComponent,\r\n        BrokenChapterContentComponent,\r\n        TheInterrogationChapterContentComponent,\r\n        FugitivesChapterContentComponent,\r\n        FromTheDeadChapterContentComponent,\r\n        WaitingForHankChapterContentComponent,\r\n        OnTheRunChapterContentComponent,\r\n        JerichoChapterContentComponent,\r\n        TheNestChapterContentComponent,\r\n        TimeToDecideChapterContentComponent,\r\n        ZlatkoChapterContentComponent,\r\n        RussianRouletteChapterContentComponent,\r\n        SparePartsChapterContentComponent,\r\n        EdenClubChapterContentComponent,\r\n        PiratesCoveChapterContentComponent,\r\n        TheBridgeChapterContentComponent,\r\n        StratfordTowerChapterContentComponent,\r\n        PublicEnemyChapterContentComponent,\r\n        MidnightTrainChapterContentComponent,\r\n        CapitolParkChapterContentComponent,\r\n        MeetKamskiChapterContentComponent,\r\n        FreedomMarchChapterContentComponent,\r\n        LastChanceConnorChapterContentComponent,\r\n        CrossroadsKaraChapterContentComponent,\r\n        CrossroadsMarkusChapterContentComponent,\r\n        CrossroadsConnorChapterContentComponent,\r\n        NightSoulMarkusChapterContentComponent,\r\n        NightSoulConnorChapterContentComponent,\r\n        KaraLeavingDetroitChapterContentComponent,\r\n        KaraCapturedChapterContentComponent,\r\n        ConnorsLastMissionChapterContentComponent,\r\n        ConnorCyberlifeTowerChapterContentComponent,\r\n        MarkusDemonstrationChapterContentComponent,\r\n        MarkusRevolutionChapterContentComponent,\r\n    ],\r\n    imports: [SharedModule, ChaptersRoutingModule],\r\n})\r\nexport class ChaptersModule {}\r\n","export function isDate(value) {\n    return value instanceof Date && !isNaN(+value);\n}\n//# sourceMappingURL=isDate.js.map"]}