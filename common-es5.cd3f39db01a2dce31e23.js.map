{"version":3,"sources":["webpack:///src/app/features/layout/sidenav/sidenav.component.html","webpack:///src/app/features/layout/sidenav/sidenav.component.ts","webpack:///src/app/features/layout/info-dialog/info-dialog.component.html","webpack:///src/app/features/layout/info-dialog/info-dialog.component.ts","webpack:///src/app/features/layout/header/header.component.ts","webpack:///src/app/features/layout/base-layout/base-layout.component.ts","webpack:///src/app/features/layout/header/header.component.html","webpack:///src/app/features/layout/base-layout/base-layout.component.html"],"names":["sidenav","SidenavComponent","dataService","this","links","getChapters","map","c","title","id","InfoDialogComponent","HeaderComponent","BaseLayoutComponent","Status","chapters","dialog","open","height","width","maxHeight","autoFocus","openDialog"],"mappings":"knBAGQ,cAII,8CAASA,QAAA,UAET,QACJ,O,0BALI,kCAIA,+B,ICOCC,E,+BAAN,IAAMA,EAAN,WAIH,WAAoBC,aAAA,KAAAA,cAJjB,6CAOCC,KAAKC,MAAQD,KAAKD,YACbG,cACAC,IAAKC,YAAC,OAAK,IAAI,IAAKA,EAAEC,MAAOD,EAAEE,UATrC,M,oCAAMR,GAAgB,Y,uBAAhBA,EAAgB,yVDhB7B,gBACI,aAAI,uBAAY,OAChB,uBACI,oBAQJ,OAEA,sBAEA,aAAI,iBAAM,OACV,uBACI,cAA2C,+BAAS,EAAAD,QAAA,UAChD,mBACJ,OACA,eAII,+BAAS,EAAAA,QAAA,UAET,uBACJ,OACJ,OACJ,Q,MAvB6B,gCAWJ,uC,mSEyCT,iBACI,qBAAiC,iBACrC,Q,sBACA,iBAII,qBAAiC,0BACrC,Q,sBACA,iBAII,qBAAsC,wBAC1C,Q,yBAnBJ,QACI,iBACI,QACJ,OAEA,uBAGA,uBAMA,uBAMJ,Q,gCAlBQ,4CAGE,8CAID,oDAMA,qDC5Dd,IAAMU,ECQAC,ECVAC,EFEN,IAAMF,EAAN,WAKH,WAAoBR,aAAA,KAAAA,cAFpB,KAAAW,OAAS,IAHN,6CAQCV,KAAKW,SAAWX,KAAKD,YAAYG,kBARlC,M,oCAAMK,GAAmB,Y,uBAAnBA,EAAmB,+yBDRhC,gBACI,eAAuC,gBAAK,OAC5C,+BACI,YAAG,iBAAmB,gBAAK,OAAQ,gCAAoB,OACvD,YACI,iBAAQ,yCAA6B,OAAU,cAAM,2DAEzD,OACA,iBACI,kBACK,6DAAiD,OAEtD,iBACI,8DACJ,OACJ,OACA,aAAG,kBAAmB,iBAAK,OAAQ,2BAAc,OACjD,iBACI,cAAI,4BAAgB,OACpB,iBAAoB,sDAA0C,OAClE,OAEA,iBACI,gBACI,eACA,sBAKA,eACJ,OACA,aACI,4EACJ,OACA,gBACI,eAAE,sBAAmD,eACzD,OACA,aAAG,+CAAmC,OACtC,gBACI,eAAE,sBAA2D,eACjE,OACA,aAAG,mEAAuD,OAC1D,gBACI,eAAE,sBAAgD,eACtD,OACA,aAAG,gEAAoD,OAC3D,OAEA,uBAEA,cAAI,oBAAQ,OACZ,iBACI,iCAqBJ,OACJ,OACA,iCACI,cACA,qBAAoC,iBAAK,OAC7C,OACJ,Q,MA3B8C,sC,+lBErCvC,IAAMC,EAAN,WAGH,WAAoBI,aAAA,KAAAA,SAHjB,mFAQCZ,KAAKY,OAAOC,KAAK,EAAqB,CAClCC,OAAQ,QACRC,MAAO,QACPC,UAAW,OACXC,WAAU,QAZf,M,oCAAMT,GAAe,Y,uBAAfA,EAAe,uREhB5B,iBACI,gBACI,oBAAqB,+BAAS,EAAAX,QAAA,WAAkB,OAChD,oBACA,oBAAyB,+BAAS,EAAAqB,eAAc,OAChD,oBACJ,OACJ,Q,MAJ6B,qCAEI,uC,meDC1B,IAAMT,EAAN,WAEL,aAAa,UAFR,wD,oCAAMA,I,uBAAAA,EAAmB,gU,GAAA,MENhC,kCAEI,0BACI,wBACJ,OAEA,gCACI,uBACA,gBAMI,0BACJ,OACA,uBACJ,OACJ,Q,mBAfqB,0BAIiB,4B","file":"x","sourcesContent":["<div class=\"container\">\r\n    <h1>Chapter list</h1>\r\n    <mat-nav-list>\r\n        <a\r\n            mat-list-item\r\n            [routerLink]=\"['/chapters', link.id]\"\r\n            *ngFor=\"let link of links\"\r\n            (click)=\"sidenav.close()\"\r\n        >\r\n            {{ link.label }}\r\n        </a>\r\n    </mat-nav-list>\r\n\r\n    <mat-divider></mat-divider>\r\n\r\n    <h1>Extras</h1>\r\n    <mat-nav-list>\r\n        <a mat-list-item [routerLink]=\"['/chloe']\" (click)=\"sidenav.close()\">\r\n            Chloe\r\n        </a>\r\n        <a\r\n            mat-list-item\r\n            href=\"https://detroit-become-human.fandom.com/wiki/Magazine\"\r\n            target=\"_blank\"\r\n            (click)=\"sidenav.close()\"\r\n        >\r\n            Magazines\r\n        </a>\r\n    </mat-nav-list>\r\n</div>\r\n","import {\r\n    Component,\r\n    OnInit,\r\n    ChangeDetectionStrategy,\r\n    Input,\r\n} from '@angular/core';\r\nimport { MatSidenav } from '@angular/material/sidenav';\r\nimport { Link } from '@app/core/models';\r\nimport { DataService } from '@app/core/services';\r\n\r\n@Component({\r\n    selector: 'app-sidenav',\r\n    templateUrl: './sidenav.component.html',\r\n    styleUrls: ['./sidenav.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class SidenavComponent implements OnInit {\r\n    @Input() sidenav: MatSidenav;\r\n    public links: Link[];\r\n\r\n    constructor(private dataService: DataService) {}\r\n\r\n    ngOnInit(): void {\r\n        this.links = this.dataService\r\n            .getChapters()\r\n            .map((c) => new Link(c.title, c.id));\r\n    }\r\n}\r\n","<div fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\r\n    <h1 mat-dialog-title fxFlex=\"1 0 auto\">About</h1>\r\n    <mat-dialog-content fxFlex=\"0 0 auto\">\r\n        <p><span class=\"name\">Names</span> are written in bold.</p>\r\n        <p>\r\n            <strong>This is an action or an event</strong> <br />The associated\r\n            dialogue being available below.\r\n        </p>\r\n        <div class=\"condition\">\r\n            <span class=\"name\"\r\n                >Conditions that affect dialogues are also in bold</span\r\n            >\r\n            <div class=\"condition-text\">\r\n                And the text that goes with it is written below.\r\n            </div>\r\n        </div>\r\n        <p><span class=\"note\">Notes</span> are in italic.</p>\r\n        <div class=\"choices\">\r\n            <em>DIALOGUE CHOICES</em>\r\n            <div class=\"choice\">have their associated dialogue just below.</div>\r\n        </div>\r\n\r\n        <div gdColumns=\"auto 1fr\" gdRows=\"auto\">\r\n            <p class=\"presentation-icon\">\r\n                [\r\n                <fa-icon\r\n                    icon=\"lock-open\"\r\n                    flip=\"horizontal\"\r\n                    class=\"important\"\r\n                ></fa-icon>\r\n                ]\r\n            </p>\r\n            <p>\r\n                means that the option has to be unlocked by a previous action.\r\n            </p>\r\n            <p class=\"presentation-icon\">\r\n                [ <fa-icon icon=\"skull\" class=\"important\"></fa-icon> ]\r\n            </p>\r\n            <p>indicates the death of a character.</p>\r\n            <p class=\"presentation-icon\">\r\n                [ <fa-icon icon=\"hourglass-end\" class=\"important\"></fa-icon> ]\r\n            </p>\r\n            <p>indicates actions happening if you loose too much time.</p>\r\n            <p class=\"presentation-icon\">\r\n                [ <fa-icon icon=\"tv\" class=\"important\"></fa-icon> ]\r\n            </p>\r\n            <p>indicates dialogues that can be heard on television.</p>\r\n        </div>\r\n\r\n        <mat-divider></mat-divider>\r\n\r\n        <h2>Progress</h2>\r\n        <div gdColumns=\"auto 1fr\" gdRows=\"auto\">\r\n            <ng-container *ngFor=\"let chapter of chapters\">\r\n                <div class=\"chapter-progress-title\">\r\n                    {{ chapter.number }}. {{ chapter.title }}\r\n                </div>\r\n\r\n                <div *ngIf=\"chapter.status === Status.Done\" class=\"done\">\r\n                    <fa-icon icon=\"check\"></fa-icon> Done\r\n                </div>\r\n                <div\r\n                    *ngIf=\"chapter.status === Status.NotStarted\"\r\n                    class=\"not-started\"\r\n                >\r\n                    <fa-icon icon=\"times\"></fa-icon> Not available\r\n                </div>\r\n                <div\r\n                    *ngIf=\"chapter.status === Status.InProgress\"\r\n                    class=\"in-progress\"\r\n                >\r\n                    <fa-icon icon=\"ellipsis-h\"></fa-icon> In progress\r\n                </div>\r\n            </ng-container>\r\n        </div>\r\n    </mat-dialog-content>\r\n    <mat-dialog-actions fxFlex=\"1 0 auto\">\r\n        <br />\r\n        <button mat-button mat-dialog-close>Close</button>\r\n    </mat-dialog-actions>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Chapter, Status } from '@app/core/models';\r\nimport { DataService } from '@app/core/services';\r\n\r\n@Component({\r\n    templateUrl: './info-dialog.component.html',\r\n    styleUrls: ['./info-dialog.component.scss'],\r\n})\r\nexport class InfoDialogComponent implements OnInit {\r\n    public chapters: Chapter[];\r\n\r\n    Status = Status;\r\n\r\n    constructor(private dataService: DataService) {}\r\n\r\n    ngOnInit(): void {\r\n        this.chapters = this.dataService.getChapters();\r\n    }\r\n}\r\n","import {\r\n    Component,\r\n    OnInit,\r\n    ChangeDetectionStrategy,\r\n    Input,\r\n} from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSidenav } from '@angular/material/sidenav';\r\nimport { InfoDialogComponent } from '../info-dialog/info-dialog.component';\r\n\r\n@Component({\r\n    selector: 'app-header',\r\n    templateUrl: './header.component.html',\r\n    styleUrls: ['./header.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n    @Input() sidenav: MatSidenav;\r\n\r\n    constructor(private dialog: MatDialog) {}\r\n\r\n    ngOnInit(): void {}\r\n\r\n    openDialog() {\r\n        this.dialog.open(InfoDialogComponent, {\r\n            height: '500px',\r\n            width: '600px',\r\n            maxHeight: '90vh',\r\n            autoFocus: false,\r\n        });\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  templateUrl: './base-layout.component.html',\r\n  styleUrls: ['./base-layout.component.scss']\r\n})\r\nexport class BaseLayoutComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<header>\r\n    <nav fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n        <fa-icon icon=\"bars\" (click)=\"sidenav.toggle()\"></fa-icon>\r\n        <fa-icon icon=\"home\" [routerLink]=\"['/home']\"></fa-icon>\r\n        <fa-icon icon=\"question\" (click)=\"openDialog()\"></fa-icon>\r\n        <fa-icon icon=\"envelope\" [routerLink]=\"['/contact']\"></fa-icon>\r\n    </nav>\r\n</header>\r\n","<mat-sidenav-container class=\"container\">\r\n    <!-- Sidenav -->\r\n    <mat-sidenav #sidenav mode=\"side\">\r\n        <app-sidenav [sidenav]=\"sidenav\"></app-sidenav>\r\n    </mat-sidenav>\r\n    <!-- Page content -->\r\n    <mat-sidenav-content fxLayout=\"column\">\r\n        <app-header fxFlex=\"0 1 auto\" [sidenav]=\"sidenav\"></app-header>\r\n        <div\r\n            fxFlex=\"1 1 auto\"\r\n            fxLayout=\"column\"\r\n            fxLayoutAlign=\"start stretch\"\r\n            class=\"content\"\r\n        >\r\n            <router-outlet fxFlex=\"0 0 0\"></router-outlet>\r\n        </div>\r\n        <app-footer fxFlex=\"0 1 auto\"></app-footer>\r\n    </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n"]}